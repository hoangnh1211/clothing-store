{"ast":null,"code":"\"use strict\";\n\nconst IntN = require('./intn');\n\nmodule.exports = {\n  id: 0x38,\n  type: 'INT4',\n  name: 'Int',\n  declaration: function declaration() {\n    return 'int';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(IntN.id);\n    buffer.writeUInt8(4);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(4);\n      buffer.writeInt32LE(parseInt(parameter.value));\n    } else {\n      buffer.writeUInt8(0);\n    }\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseInt(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -2147483648 || value > 2147483647) {\n      return new TypeError('Value must be between -2147483648 and 2147483647.');\n    }\n\n    return value;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}