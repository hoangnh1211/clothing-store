{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst AbstractDialect = require('../abstract');\n\nconst ConnectionManager = require('./connection-manager');\n\nconst Query = require('./query');\n\nconst QueryGenerator = require('./query-generator');\n\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n  }\n\n}\n\nMariadbDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  lock: true,\n  forShare: 'LOCK IN SHARE MODE',\n  schemas: true,\n  inserts: {\n    ignoreDuplicates: ' IGNORE',\n    updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nConnectionManager.prototype.defaultVersion = '5.5.3';\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\nmodule.exports = MariadbDialect;","map":null,"metadata":{},"sourceType":"script"}