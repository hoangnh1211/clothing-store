{"ast":null,"code":"\"use strict\";\n\nconst FEDAUTHINFOID = {\n  STSURL: 0x01,\n  SPN: 0x02\n};\n\nmodule.exports = function fedAuthInfoParser(parser, colMetadata, options, callback) {\n  parser.readUInt32LE(tokenLength => {\n    parser.readBuffer(tokenLength, data => {\n      const token = {\n        'name': 'FEDAUTHINFO',\n        'event': 'fedAuthInfo',\n        'spn': undefined,\n        'stsurl': undefined\n      };\n      let offset = 0;\n      const countOfInfoIDs = data.readUInt32LE(offset);\n      offset += 4;\n\n      for (let i = 0; i < countOfInfoIDs; i++) {\n        const fedauthInfoID = data.readUInt8(offset);\n        offset += 1;\n        const fedAuthInfoDataLen = data.readUInt32LE(offset);\n        offset += 4;\n        const fedAuthInfoDataOffset = data.readUInt32LE(offset);\n        offset += 4;\n\n        switch (fedauthInfoID) {\n          case FEDAUTHINFOID.SPN:\n            token.spn = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n\n          case FEDAUTHINFOID.STSURL:\n            token.stsurl = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n          // ignoring unknown fedauthinfo options\n\n          default:\n            break;\n        }\n      }\n\n      callback(token);\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}