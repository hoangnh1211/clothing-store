{"ast":null,"code":"\"use strict\";\n\nmodule.exports = {\n  id: 0x23,\n  type: 'TEXT',\n  name: 'Text',\n  hasCollation: true,\n  hasTableName: true,\n  hasTextPointerAndTimestamp: true,\n  dataLengthLength: 4,\n  declaration: function declaration() {\n    return 'text';\n  },\n  resolveLength: function resolveLength(parameter) {\n    if (parameter.value != null) {\n      return parameter.value.length;\n    } else {\n      return -1;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(this.id);\n    buffer.writeInt32LE(parameter.length);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter) {\n    buffer.writeBuffer(Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00]));\n\n    if (parameter.value != null) {\n      buffer.writeInt32LE(parameter.length);\n      buffer.writeString(parameter.value.toString(), 'ascii');\n    } else {\n      buffer.writeInt32LE(parameter.length);\n    }\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}