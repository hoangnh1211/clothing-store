{"ast":null,"code":"\"use strict\"; // s2.2.7.13 (introduced in TDS 7.3.B)\n\nconst valueParse = require('../value-parser');\n\nfunction nullHandler(parser, columnMetaData, options, callback) {\n  callback(null);\n}\n\nmodule.exports = function (parser, columnsMetaData, options, callback) {\n  const length = Math.ceil(columnsMetaData.length / 8);\n  parser.readBuffer(length, bytes => {\n    const bitmap = [];\n\n    for (let i = 0, len = bytes.length; i < len; i++) {\n      const byte = bytes[i];\n\n      for (let j = 0; j <= 7; j++) {\n        bitmap.push(byte & 1 << j ? true : false);\n      }\n    }\n\n    const columns = options.useColumnNames ? {} : [];\n    const len = columnsMetaData.length;\n    let i = 0;\n\n    function next(done) {\n      if (i === len) {\n        return done();\n      }\n\n      const columnMetaData = columnsMetaData[i];\n      (bitmap[i] ? nullHandler : valueParse)(parser, columnMetaData, options, value => {\n        const column = {\n          value: value,\n          metadata: columnMetaData\n        };\n\n        if (options.useColumnNames) {\n          if (columns[columnMetaData.colName] == null) {\n            columns[columnMetaData.colName] = column;\n          }\n        } else {\n          columns.push(column);\n        }\n\n        i++;\n        next(done);\n      });\n    }\n\n    next(() => {\n      callback({\n        name: 'NBCROW',\n        event: 'row',\n        columns: columns\n      });\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}