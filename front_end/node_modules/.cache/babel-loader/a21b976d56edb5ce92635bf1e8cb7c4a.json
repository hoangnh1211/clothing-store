{"ast":null,"code":"\"use strict\";\n\nconst deprecate = require('depd')('tedious');\n\nconst Null = require('./data-types/null');\n\nconst TinyInt = require('./data-types/tinyint');\n\nconst Bit = require('./data-types/bit');\n\nconst SmallInt = require('./data-types/smallint');\n\nconst Int = require('./data-types/int');\n\nconst SmallDateTime = require('./data-types/smalldatetime');\n\nconst Real = require('./data-types/real');\n\nconst Money = require('./data-types/money');\n\nconst DateTime = require('./data-types/datetime');\n\nconst Float = require('./data-types/float');\n\nconst Decimal = require('./data-types/decimal');\n\nconst Numeric = require('./data-types/numeric');\n\nconst SmallMoney = require('./data-types/smallmoney');\n\nconst BigInt = require('./data-types/bigint');\n\nconst Image = require('./data-types/image');\n\nconst Text = require('./data-types/text');\n\nconst UniqueIdentifier = require('./data-types/uniqueidentifier');\n\nconst IntN = require('./data-types/intn');\n\nconst NText = require('./data-types/ntext');\n\nconst BitN = require('./data-types/bitn');\n\nconst DecimalN = require('./data-types/decimaln');\n\nconst NumericN = require('./data-types/numericn');\n\nconst FloatN = require('./data-types/floatn');\n\nconst MoneyN = require('./data-types/moneyn');\n\nconst DateTimeN = require('./data-types/datetimen');\n\nconst VarBinary = require('./data-types/varbinary');\n\nconst VarChar = require('./data-types/varchar');\n\nconst Binary = require('./data-types/binary');\n\nconst Char = require('./data-types/char');\n\nconst NVarChar = require('./data-types/nvarchar');\n\nconst NChar = require('./data-types/nchar');\n\nconst Xml = require('./data-types/xml');\n\nconst Time = require('./data-types/time');\n\nconst Date = require('./data-types/date');\n\nconst DateTime2 = require('./data-types/datetime2');\n\nconst DateTimeOffset = require('./data-types/datetimeoffset');\n\nconst UDT = require('./data-types/udt');\n\nconst TVP = require('./data-types/tvp');\n\nconst Variant = require('./data-types/sql-variant');\n\nmodule.exports.TYPE = {\n  [Null.id]: Null,\n  [TinyInt.id]: TinyInt,\n  [Bit.id]: Bit,\n  [SmallInt.id]: SmallInt,\n  [Int.id]: Int,\n  [SmallDateTime.id]: SmallDateTime,\n  [Real.id]: Real,\n  [Money.id]: Money,\n  [DateTime.id]: DateTime,\n  [Float.id]: Float,\n  [Decimal.id]: Decimal,\n  [Numeric.id]: Numeric,\n  [SmallMoney.id]: SmallMoney,\n  [BigInt.id]: BigInt,\n  [Image.id]: Image,\n  [Text.id]: Text,\n  [UniqueIdentifier.id]: UniqueIdentifier,\n  [IntN.id]: IntN,\n  [NText.id]: NText,\n  [BitN.id]: BitN,\n  [DecimalN.id]: DecimalN,\n  [NumericN.id]: NumericN,\n  [FloatN.id]: FloatN,\n  [MoneyN.id]: MoneyN,\n  [DateTimeN.id]: DateTimeN,\n  [VarBinary.id]: VarBinary,\n  [VarChar.id]: VarChar,\n  [Binary.id]: Binary,\n  [Char.id]: Char,\n  [NVarChar.id]: NVarChar,\n  [NChar.id]: NChar,\n  [Xml.id]: Xml,\n  [Time.id]: Time,\n  [Date.id]: Date,\n  [DateTime2.id]: DateTime2,\n  [DateTimeOffset.id]: DateTimeOffset,\n  [UDT.id]: UDT,\n  [TVP.id]: TVP,\n  [Variant.id]: Variant\n};\nconst typeByName = module.exports.typeByName = {\n  TinyInt,\n  Bit,\n  SmallInt,\n  Int,\n  SmallDateTime,\n  Real,\n  Money,\n  DateTime,\n  Float,\n  Decimal,\n  Numeric,\n  SmallMoney,\n  BigInt,\n  Image,\n  Text,\n  UniqueIdentifier,\n  NText,\n  VarBinary,\n  VarChar,\n  Binary,\n  Char,\n  NVarChar,\n  NChar,\n  Xml,\n  Time,\n  Date,\n  DateTime2,\n  DateTimeOffset,\n  UDT,\n  TVP,\n  Variant,\n  // These are all internal and should not be used directly.\n  Null,\n  IntN,\n  BitN,\n  FloatN,\n  MoneyN,\n  DateTimeN,\n  DecimalN,\n  NumericN,\n  // These are all deprecated aliases.\n  DateN: Date,\n  DateTimeOffsetN: DateTimeOffset,\n  DateTime2N: DateTime2,\n  TimeN: Time,\n  UniqueIdentifierN: UniqueIdentifier\n};\n[['DateN', 'Date'], ['DateTimeOffsetN', 'DateTimeOffset'], ['DateTime2N', 'DateTime2'], ['TimeN', 'Time'], ['UniqueIdentifierN', 'UniqueIdentifier']].forEach(function ([alias, name]) {\n  deprecate.property(typeByName, alias, 'The `' + alias + '` data type alias is deprecated, please use `' + name + '` instead.');\n});\n['IntN', 'BitN', 'FloatN', 'MoneyN', 'DateTimeN', 'DecimalN', 'NumericN', 'Null'].forEach(function (name) {\n  deprecate.property(typeByName, name, 'The `' + name + '` data type is internal and will be removed.');\n});","map":null,"metadata":{},"sourceType":"script"}