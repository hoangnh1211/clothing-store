{"ast":null,"code":"\"use strict\";\n\nconst YEAR_ONE = new Date(2000, 0, -730118);\nconst UTC_YEAR_ONE = Date.UTC(2000, 0, -730118);\nmodule.exports = {\n  id: 0x28,\n  type: 'DATEN',\n  name: 'Date',\n  dataLengthLength: 1,\n  fixedDataLength: 3,\n  declaration: function declaration() {\n    return 'date';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(this.id);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(3);\n\n      if (options.useUTC) {\n        buffer.writeUInt24LE(Math.floor((+parameter.value - UTC_YEAR_ONE) / 86400000));\n      } else {\n        const dstDiff = -(parameter.value.getTimezoneOffset() - YEAR_ONE.getTimezoneOffset()) * 60 * 1000;\n        buffer.writeUInt24LE(Math.floor((+parameter.value - YEAR_ONE + dstDiff) / 86400000));\n      }\n    } else {\n      buffer.writeUInt8(0);\n    }\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = Date.parse(value);\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}