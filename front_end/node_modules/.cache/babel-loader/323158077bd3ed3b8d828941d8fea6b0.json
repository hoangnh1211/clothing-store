{"ast":null,"code":"\"use strict\";\n\nconst _require = require(\"./TimeoutError\"),\n      TimeoutError = _require.TimeoutError;\n\nclass Deferred {\n  constructor() {\n    this._timeout = null;\n    this._promise = new Promise((resolve, reject) => {\n      this._reject = reject;\n      this._resolve = resolve;\n    });\n  }\n\n  registerTimeout(timeoutInMillis, callback) {\n    if (this._timeout) return;\n    this._timeout = setTimeout(() => {\n      callback();\n      this.reject(new TimeoutError(\"Operation timeout\"));\n    }, timeoutInMillis);\n  }\n\n  _clearTimeout() {\n    if (!this._timeout) return;\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n\n  resolve(value) {\n    this._clearTimeout();\n\n    this._resolve(value);\n  }\n\n  reject(error) {\n    this._clearTimeout();\n\n    this._reject(error);\n  }\n\n  promise() {\n    return this._promise;\n  }\n\n}\n\nmodule.exports = Deferred;","map":null,"metadata":{},"sourceType":"script"}